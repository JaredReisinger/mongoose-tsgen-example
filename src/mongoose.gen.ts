/* tslint:disable */
/* eslint-disable */

// ######################################## THIS FILE WAS GENERATED BY MONGOOSE-TSGEN ######################################## //

// NOTE: ANY CHANGES MADE WILL BE OVERWRITTEN ON SUBSEQUENT EXECUTIONS OF MONGOOSE-TSGEN.

import mongoose from "mongoose";

/**
 * Lean version of ExampleDocument (type alias of `Example`)
 *
 * Use this type alias to avoid conflicts with model names:
 * ```
 * import { Example } from "../models"
 * import { ExampleObject } from "../interfaces/mongoose.gen.ts"
 *
 * const exampleObject: ExampleObject = example.toObject();
 * ```
 */
export type ExampleObject = Example;

/**
 * Mongoose Method types
 *
 * Use type assertion to ensure Example methods type safety:
 * ```
 * ExampleSchema.methods = <ExampleMethods>{ ... };
 * ```
 */
export type ExampleMethods = {};

/**
 * Mongoose Static types
 *
 * Use type assertion to ensure Example statics type safety:
 * ```
 * ExampleSchema.statics = <ExampleStatics>{ ... };
 * ```
 */
export type ExampleStatics = {
  someStatic: (this: ExampleModel, ...args: any[]) => any;
};

/**
 * Mongoose Model type
 *
 * Pass this type to the Mongoose Model constructor:
 * ```
 * const Example = mongoose.model<ExampleDocument, ExampleModel>("Example", ExampleSchema);
 * ```
 */
export interface ExampleModel
  extends mongoose.Model<ExampleDocument>,
    ExampleStatics {}

/**
 * Mongoose Schema type
 *
 * Assign this type to new Example schema instances:
 * ```
 * const ExampleSchema: ExampleSchema = new mongoose.Schema({ ... })
 * ```
 */
export type ExampleSchema = mongoose.Schema<ExampleDocument, ExampleModel>;

/**
 * Lean version of ExampleDocument
 *
 * This has all Mongoose getters & functions removed. This type will be returned from `ExampleDocument.toObject()`. To avoid conflicts with model names, use the type alias `ExampleObject`.
 * ```
 * const exampleObject = example.toObject();
 * ```
 */
export interface Example {
  stringProp?: string;
  numberProp?: number;
  dateProp?: Date;
  _id: mongoose.Types.ObjectId;
}

/**
 * Mongoose Document type
 *
 * Pass this type to the Mongoose Model constructor:
 * ```
 * const Example = mongoose.model<ExampleDocument, ExampleModel>("Example", ExampleSchema);
 * ```
 */
export interface ExampleDocument
  extends mongoose.Document<mongoose.Types.ObjectId>,
    ExampleMethods {
  stringProp?: string;
  numberProp?: number;
  dateProp?: Date;
  _id: mongoose.Types.ObjectId;
}
